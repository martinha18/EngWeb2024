var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function genFilmes(filmes){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Lista de Filmes</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-red">
                    <h3>Lista de Filmes</h3>
                </header>
    
                <ul class="w3-ul w3-hoverable">

    `
    filmes.forEach(filme => {
        pagHTML += `
                    <li><a href='/filmes/${filme.id}'>${filme.title}</a></li>
        `
    });

    pagHTML += `
                </ul> 

                <footer class="w3-container w3-red">
                    <h5> Generated by EngWeb2024 [<a href='/'>Voltar</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}



function genAtores(atores){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Lista de Atores</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-red">
                    <h3>Lista de Atores</h3>
                </header>
    
                <ul class="w3-ul w3-hoverable">

    `
    atores.forEach(ator => {
        pagHTML += `
                    <li><a href='/atores/${ator.id}'>${ator.nome}</a></li>
        `
    });

    pagHTML += `
                </ul> 

                <footer class="w3-container w3-red">
                    <h5> Generated by EngWeb2024 [<a href='/'>Voltar</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}



function genGeneros(generos){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Lista de Géneros</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-red">
                    <h3>Lista de Géneros</h3>
                </header>
    
                <ul class="w3-ul w3-hoverable">

    `
    generos.forEach(genero => {
        pagHTML += `
                    <li><a href='/generos/${genero.id}'>${genero.nome}</a></li>
        `
    });

    pagHTML += `
                </ul> 

                <footer class="w3-container w3-red">
                    <h5> Generated by EngWeb2024 [<a href='/'>Voltar</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}


function genFilme(filme){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Filme ${filme.id}</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-red">
                    <h3>Filme: ${filme.title}</h3>
                </header>
    
                <div class="w3-container">
                    <pre>
                        <table class="w3-table-all">
                            <tr>
                                <td><h5>Ano:</h5></td>
                                <td>${filme.year}</td>
                            </tr>
                            <tr>
                                <td><h5>Elenco:</h5></td>
                                <td>

    `
    filme.cast.forEach(ator => {
        pagHTML += `
                                    <p><a href='/atores/${ator.id}'>${ator.nome}</a></p>
        `
    });

    pagHTML += `
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Géneros:</h5></td>
                                <td>
    `

    filme.genres.forEach(genero => {
        pagHTML += `
                                    <p><a href='/generos/${genero.id}'>${genero.nome}</a></p>
        `
    });

    pagHTML += `
                                </td>
                            </tr>
                        </table>
                    </pre>
                </div>

                <footer class="w3-container w3-red">
                    <h5> Generated by EngWeb2024 [<a href='/filmes'>Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}


function genGenero(genero){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Género ${genero.id}</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-red">
                    <h3>Género: ${genero.nome}</h3>
                </header>
    
                <div class="w3-container">
                    <pre>
                        <table class="w3-table-all">
                            <tr>
                                <td><h5>Ano:</h5></td>
                                <td>${genero.nome}</td>
                            </tr>
                        </table>
                    </pre>
                </div>

                <footer class="w3-container w3-red">
                    <h5> Generated by EngWeb2024 [<a href='/generos'>Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}


function genAtor(ator){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Ator ${ator.id}</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-red">
                    <h3>Ator: ${ator.nome}</h3>
                </header>
    
                <div class="w3-container">
                    <pre>
                        <table class="w3-table-all">
                            <tr>
                                <td><h5>Nome:</h5></td>
                                <td>${ator.nome}</td>
                            </tr>
                        </table>
                    </pre>
                </div>

                <footer class="w3-container w3-red">
                    <h5> Generated by EngWeb2024 [<a href='/atores'>Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}

http.createServer(function (req, res) {
    var regex1 = /^\/filmes\/\w+$/
    var regex2 = /^\/atores\/A\d+$/
    var regex3 = /^\/generos\/G\d+$/
    var q = url.parse( req.url, true)
    if(q.pathname == '/'){
        fs.readFile('principal.html', function(erro,dados) {
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(dados)
            res.end()
        }) 
    }
    else if(q.pathname == '/filmes'){
        axios.get('http://localhost:3000/filmes')
            .then(resp => {
                data = resp.data
                pagHTML = genFilmes(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(regex1.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                data = resp.data
                pagHTML = genFilme(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(q.pathname == '/generos'){
        axios.get('http://localhost:3000/generos')
            .then(resp => {
                data = resp.data
                pagHTML = genGeneros(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(regex2.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                data = resp.data
                pagHTML = genGenero(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(q.pathname == '/atores'){
        axios.get('http://localhost:3000/atores')
            .then(resp => {
                data = resp.data
                pagHTML = genAtores(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(regex3.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                data = resp.data
                pagHTML = genAtor(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(q.pathname == '/w3.css'){
        fs.readFile('w3.css', function(erro, dados) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(dados)
            res.end()
        })
    }
    else{
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
        res.write('<p>Erro: pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
    console.log(q.pathname)
}).listen(7777)
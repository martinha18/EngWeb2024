var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function genOcorrencias(ocorrencias){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Lista de Ocorrências</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-yellow">
                    <h3>Lista de Ocorrências</h3>
                </header>
    
                <table class="w3-table w3-bordered">
                    <tr>
                        <th>Identificador</th>
                        <th>Data</th>
                        <th>Animal</th>
                    </tr>
    `
    ocorrencias.forEach(ocorr => {
        pagHTML += `
                    <tr>
                        <td><a href='/ocorrencias/${ocorr.id}'>${ocorr.id}</a></td>
                        <td>${ocorr.bite_date}</td>
                        <td>${ocorr.SpeciesIDDesc}</td>
                    </tr>
        `
    });

    pagHTML += `
                </table>

                <footer class="w3-container w3-yellow">
                    <h5> Generated by EngWeb2024 </h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}


function genOcorrencia(ocorr){
    pagHTML=`
<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Ocorrência ${ocorr.id}</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-yellow">
                    <h3>Ocorrência ${ocorr.id}</h3>
                </header>
    
                <div class="w3-container">
                    <pre>
                        ${JSON.stringify(ocorr)}
                    </pre>
                </div>

                <footer class="w3-container w3-yellow">
                    <h5> Generated by EngWeb2024 [<a href='/ocorrencias'>Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `
    return pagHTML
}

http.createServer(function (req, res) {
    var regex1 = /^\/filmes\/[a-z0-9]{4}$/
    var regex2 = /^\/filmes\/[a-z0-9]{4}$/
    var regex3 = /^\/filmes\/[a-z0-9]{4}$/
    var q = url.parse( req.url, true)
    if(q.pathname == '/'){
        fs.readFile('principal.html', function(erro,dados) {
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(dados)
            res.end()
        }) 
    }
    else if(q.pathname == '/filmes'){
        axios.get('http://localhost:3000/filmes')
            .then(resp => {
                data = resp.data
                pagHTML = genFilmes(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(regex1.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                data = resp.data
                pagHTML = genFilme(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(q.pathname == '/generos'){
        axios.get('http://localhost:3000/generos')
            .then(resp => {
                data = resp.data
                pagHTML = genGeneros(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(regex2.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                data = resp.data
                pagHTML = genGenero(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(q.pathname == '/atores'){
        axios.get('http://localhost:3000/atores')
            .then(resp => {
                data = resp.data
                pagHTML = genAtores(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(regex3.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                data = resp.data
                pagHTML = genAtor(data)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            });
    }
    else if(q.pathname == '/w3.css'){
        fs.readFile('w3.css', function(erro, dados) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(dados)
            res.end()
        })
    }
    else{
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
        res.write('<p>Erro: pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
    console.log(q.pathname)
}).listen(7777)